/*
 * Digitalization of Asset Counting Web Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AssetsFullTextAndPropertySearchApiController : ControllerBase
    { 
        /// <summary>
        /// Allows for searching assets via specific search value and properties.  This query must be paged. Specify page and pageSize.
        /// </summary>
        
        /// <param name="assetFullTextAndPropertySearch">Query parameters for searching and paging</param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/api/assets/search/bytextandproperties")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("Post")]
        [SwaggerResponse(statusCode: 200, type: typeof(PagedResultAsset), description: "Success")]
        public virtual IActionResult Post([FromBody]AssetFullTextAndPropertySearch assetFullTextAndPropertySearch)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PagedResultAsset));

            string exampleJson = null;
            exampleJson = "{\n  \"pageCount\" : 6,\n  \"lastRowOnPage\" : 2,\n  \"pageSize\" : 1,\n  \"firstRowOnPage\" : 5,\n  \"rowCount\" : 5,\n  \"currentPage\" : 0,\n  \"results\" : [ {\n    \"companyCode\" : \"companyCode\",\n    \"creator\" : \"creator\",\n    \"sapAsset\" : {\n      \"companyCode\" : \"companyCode\",\n      \"serialNumber\" : \"serialNumber\",\n      \"quantity\" : 5.962133916683182,\n      \"costCenter\" : \"costCenter\",\n      \"capitalisationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"deactivatedOn\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"typeName\" : \"typeName\",\n      \"description\" : \"description\",\n      \"acquisitionValue\" : 1.4658129805029452,\n      \"assetClass\" : \"assetClass\",\n      \"room\" : \"room\",\n      \"subNumber\" : \"subNumber\",\n      \"inventoryNumber\" : \"inventoryNumber\",\n      \"unit\" : \"unit\",\n      \"assetNumber\" : \"assetNumber\",\n      \"isDeactivated\" : true,\n      \"vendor\" : \"vendor\",\n      \"plant\" : \"plant\",\n      \"location\" : \"location\",\n      \"assetSuperNumber\" : \"assetSuperNumber\",\n      \"lastInventoryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"companyCodeCurrency\" : \"companyCodeCurrency\"\n    },\n    \"tagId\" : \"tagId\",\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"latitude\" : 0.8008281904610115,\n    \"shareTags\" : true,\n    \"isUntaggable\" : true,\n    \"subNumber\" : \"subNumber\",\n    \"secondTagId\" : \"secondTagId\",\n    \"assetNumber\" : \"assetNumber\",\n    \"comment\" : \"comment\",\n    \"lastModified\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"longitude\" : 6.027456183070403\n  }, {\n    \"companyCode\" : \"companyCode\",\n    \"creator\" : \"creator\",\n    \"sapAsset\" : {\n      \"companyCode\" : \"companyCode\",\n      \"serialNumber\" : \"serialNumber\",\n      \"quantity\" : 5.962133916683182,\n      \"costCenter\" : \"costCenter\",\n      \"capitalisationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"deactivatedOn\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"typeName\" : \"typeName\",\n      \"description\" : \"description\",\n      \"acquisitionValue\" : 1.4658129805029452,\n      \"assetClass\" : \"assetClass\",\n      \"room\" : \"room\",\n      \"subNumber\" : \"subNumber\",\n      \"inventoryNumber\" : \"inventoryNumber\",\n      \"unit\" : \"unit\",\n      \"assetNumber\" : \"assetNumber\",\n      \"isDeactivated\" : true,\n      \"vendor\" : \"vendor\",\n      \"plant\" : \"plant\",\n      \"location\" : \"location\",\n      \"assetSuperNumber\" : \"assetSuperNumber\",\n      \"lastInventoryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"companyCodeCurrency\" : \"companyCodeCurrency\"\n    },\n    \"tagId\" : \"tagId\",\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"latitude\" : 0.8008281904610115,\n    \"shareTags\" : true,\n    \"isUntaggable\" : true,\n    \"subNumber\" : \"subNumber\",\n    \"secondTagId\" : \"secondTagId\",\n    \"assetNumber\" : \"assetNumber\",\n    \"comment\" : \"comment\",\n    \"lastModified\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"longitude\" : 6.027456183070403\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PagedResultAsset>(exampleJson)
            : default(PagedResultAsset);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
