/*
 * Digitalization of Asset Counting Web Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AssetsControllerV2ApiController : ControllerBase
    { 
        /// <summary>
        /// Returns list of Assets. This request must be paged.
        /// </summary>
        
        /// <param name="sortingColumn">define the columns by which the list will be sorted. Find the list of possible columns via AssetSortingColumnsController</param>
        /// <param name="page">define the page that this query will return</param>
        /// <param name="pageSize">define the number of items each page will contain if records are available</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        [HttpGet]
        [Route("/api/v2/assets")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("Get")]
        [SwaggerResponse(statusCode: 200, type: typeof(PagedResultAssetResource), description: "Success")]
        public virtual IActionResult Get([FromQuery]string sortingColumn, [FromQuery]int? page, [FromQuery]int? pageSize)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PagedResultAssetResource));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            string exampleJson = null;
            exampleJson = "{\n  \"pageCount\" : 5,\n  \"lastRowOnPage\" : 9,\n  \"pageSize\" : 5,\n  \"firstRowOnPage\" : 7,\n  \"rowCount\" : 2,\n  \"currentPage\" : 1,\n  \"results\" : [ {\n    \"tagId\" : \"tagId\",\n    \"capitalisationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"deactivatedOn\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"typeName\" : \"typeName\",\n    \"description\" : \"description\",\n    \"acquisitionValue\" : 0.8008281904610115,\n    \"assetClass\" : \"assetClass\",\n    \"isUntaggable\" : true,\n    \"inventoryNumber\" : \"inventoryNumber\",\n    \"assetNumber\" : \"assetNumber\",\n    \"isDeactivated\" : true,\n    \"vendor\" : \"vendor\",\n    \"lastInventoryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"companyCodeCurrency\" : \"companyCodeCurrency\",\n    \"companyCode\" : \"companyCode\",\n    \"creator\" : \"creator\",\n    \"serialNumber\" : \"serialNumber\",\n    \"quantity\" : 6.027456183070403,\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"costCenter\" : \"costCenter\",\n    \"shareTags\" : true,\n    \"subNumber\" : \"subNumber\",\n    \"room\" : \"room\",\n    \"secondTagId\" : \"secondTagId\",\n    \"unit\" : \"unit\",\n    \"plant\" : \"plant\",\n    \"location\" : \"location\",\n    \"comment\" : \"comment\",\n    \"lastModified\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"assetSuperNumber\" : \"assetSuperNumber\"\n  }, {\n    \"tagId\" : \"tagId\",\n    \"capitalisationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"deactivatedOn\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"typeName\" : \"typeName\",\n    \"description\" : \"description\",\n    \"acquisitionValue\" : 0.8008281904610115,\n    \"assetClass\" : \"assetClass\",\n    \"isUntaggable\" : true,\n    \"inventoryNumber\" : \"inventoryNumber\",\n    \"assetNumber\" : \"assetNumber\",\n    \"isDeactivated\" : true,\n    \"vendor\" : \"vendor\",\n    \"lastInventoryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"companyCodeCurrency\" : \"companyCodeCurrency\",\n    \"companyCode\" : \"companyCode\",\n    \"creator\" : \"creator\",\n    \"serialNumber\" : \"serialNumber\",\n    \"quantity\" : 6.027456183070403,\n    \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"costCenter\" : \"costCenter\",\n    \"shareTags\" : true,\n    \"subNumber\" : \"subNumber\",\n    \"room\" : \"room\",\n    \"secondTagId\" : \"secondTagId\",\n    \"unit\" : \"unit\",\n    \"plant\" : \"plant\",\n    \"location\" : \"location\",\n    \"comment\" : \"comment\",\n    \"lastModified\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"assetSuperNumber\" : \"assetSuperNumber\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PagedResultAssetResource>(exampleJson)
            : default(PagedResultAssetResource);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an Asset instance.
        /// </summary>
        
        /// <param name="assetNumber"></param>
        /// <param name="subNumber"></param>
        /// <param name="companyCode"></param>
        /// <param name="asset">The asset object to be updated.</param>
        /// <response code="200">Success</response>
        [HttpPut]
        [Route("/api/v2/assets")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("Put")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetResource), description: "Success")]
        public virtual IActionResult Put([FromQuery][Required()]string assetNumber, [FromQuery][Required()]string subNumber, [FromQuery][Required()]string companyCode, [FromBody]AssetPutResource asset)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetResource));

            string exampleJson = null;
            exampleJson = "{\n  \"tagId\" : \"tagId\",\n  \"capitalisationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"deactivatedOn\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"typeName\" : \"typeName\",\n  \"description\" : \"description\",\n  \"acquisitionValue\" : 0.8008281904610115,\n  \"assetClass\" : \"assetClass\",\n  \"isUntaggable\" : true,\n  \"inventoryNumber\" : \"inventoryNumber\",\n  \"assetNumber\" : \"assetNumber\",\n  \"isDeactivated\" : true,\n  \"vendor\" : \"vendor\",\n  \"lastInventoryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"companyCodeCurrency\" : \"companyCodeCurrency\",\n  \"companyCode\" : \"companyCode\",\n  \"creator\" : \"creator\",\n  \"serialNumber\" : \"serialNumber\",\n  \"quantity\" : 6.027456183070403,\n  \"created\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"costCenter\" : \"costCenter\",\n  \"shareTags\" : true,\n  \"subNumber\" : \"subNumber\",\n  \"room\" : \"room\",\n  \"secondTagId\" : \"secondTagId\",\n  \"unit\" : \"unit\",\n  \"plant\" : \"plant\",\n  \"location\" : \"location\",\n  \"comment\" : \"comment\",\n  \"lastModified\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"assetSuperNumber\" : \"assetSuperNumber\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AssetResource>(exampleJson)
            : default(AssetResource);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
